@model EvManager.Web.Models.PlanRuta

@{
    ViewData["Title"] = "Editar Plan de Ruta";
}

<h1>Editar Plan de Ruta</h1>

<form asp-action="Edit" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="VehiculoId" class="control-label"></label>
        <input asp-for="VehiculoId" class="form-control" />
        <span asp-validation-for="VehiculoId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="UbicacionInicio" class="control-label"></label>
        <input asp-for="UbicacionInicio" class="form-control" />
        <span asp-validation-for="UbicacionInicio" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="UbicacionFin" class="control-label"></label>
        <input asp-for="UbicacionFin" class="form-control" />
        <span asp-validation-for="UbicacionFin" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DistanciaEstimada" class="control-label"></label>
        <input asp-for="DistanciaEstimada" class="form-control" />
        <span asp-validation-for="DistanciaEstimada" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="IdsEstacionesCarga" class="control-label">IDs de Estaciones de Carga (separados por comas)</label>
        <input name="IdsEstacionesCarga" class="form-control" value="@(Model.IdsEstacionesCarga != null ? string.Join(",", Model.IdsEstacionesCarga) : "")" />
        <small class="form-text text-muted">Deje en blanco si no hay estaciones de carga.</small>
    </div>
    <div class="form-group mt-3">
        <input type="submit" value="Guardar" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Volver</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}